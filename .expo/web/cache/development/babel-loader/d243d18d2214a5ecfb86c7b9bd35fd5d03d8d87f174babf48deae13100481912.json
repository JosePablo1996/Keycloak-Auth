{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar login = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    if (!username || !password) {\n      Alert.alert('‚ùå Error', 'Usuario y contrase√±a son requeridos');\n      return;\n    }\n    var userStr = username.trim();\n    var passStr = password.trim();\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('üîê Iniciando autenticaci√≥n con Keycloak...');\n      console.log('üìã Configuraci√≥n:', {\n        username: userStr,\n        clientId: KEYCLOAK_CONFIG.clientId,\n        realm: KEYCLOAK_CONFIG.realm,\n        baseUrl: KEYCLOAK_CONFIG.baseUrl,\n        scope: KEYCLOAK_CONFIG.scope\n      });\n      var tokenUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/token`;\n      console.log('üåê Token endpoint:', tokenUrl);\n      console.log('üîÑ Verificando conectividad...');\n      var isServerReachable = yield checkServerConnectivity();\n      if (!isServerReachable) {\n        throw new Error(`No se puede conectar a Keycloak.\\n\\n` + `Verifica que:\\n` + `‚Ä¢ Keycloak est√© corriendo en: ${KEYCLOAK_CONFIG.baseUrl}\\n` + `‚Ä¢ El realm '${KEYCLOAK_CONFIG.realm}' exista\\n` + `‚Ä¢ No haya firewall bloqueando el puerto 8080`);\n      }\n      var bodyParams = new URLSearchParams({\n        grant_type: 'password',\n        client_id: KEYCLOAK_CONFIG.clientId,\n        client_secret: KEYCLOAK_CONFIG.clientSecret,\n        username: userStr,\n        password: passStr,\n        scope: KEYCLOAK_CONFIG.scope\n      });\n      console.log('üì§ Enviando credenciales al servidor...');\n      console.log('üéØ Scope solicitado:', KEYCLOAK_CONFIG.scope);\n      var response = yield fetchWithTimeout(tokenUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: bodyParams.toString()\n      }, 15000);\n      console.log('üì° Status de respuesta:', response.status);\n      if (!response.ok) {\n        var errorText = yield response.text();\n        console.error('‚ùå Error HTTP:', response.status, errorText);\n        var errorMessage = 'Error de autenticaci√≥n';\n        try {\n          var errorData = JSON.parse(errorText);\n          console.log('üîç Detalles del error:', errorData);\n          if (errorData.error === 'invalid_client') {\n            errorMessage = `‚ùå Error de configuraci√≥n del cliente\\n\\n` + `Posibles causas:\\n` + `‚Ä¢ El client_secret es incorrecto\\n` + `‚Ä¢ El cliente '${KEYCLOAK_CONFIG.clientId}' no existe\\n` + `‚Ä¢ El cliente no est√° habilitado\\n\\n` + `Soluci√≥n:\\n` + `1. Ve a Keycloak Admin Console\\n` + `2. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` + `3. Verifica la configuraci√≥n`;\n          } else if (errorData.error === 'invalid_grant') {\n            var _errorData$error_desc;\n            if ((_errorData$error_desc = errorData.error_description) != null && _errorData$error_desc.includes('Account is not fully set up')) {\n              errorMessage = `‚ùå Cuenta no completamente configurada\\n\\n` + `Tu cuenta requiere una configuraci√≥n adicional.\\n\\n` + `Posibles soluciones:\\n` + `‚Ä¢ Verifica tu email y confirma tu cuenta\\n` + `‚Ä¢ Contacta al administrador\\n` + `‚Ä¢ La cuenta puede requerir verificaci√≥n de email`;\n            } else {\n              errorMessage = '‚ùå Usuario o contrase√±a incorrectos';\n            }\n          } else if (errorData.error === 'unauthorized_client') {\n            errorMessage = `‚ùå Cliente no autorizado\\n\\n` + `El cliente no tiene habilitado 'Direct Access Grants'.\\n\\n` + `Soluci√≥n en Keycloak:\\n` + `1. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` + `2. Settings ‚Üí Direct Access Grants Enabled = ON\\n` + `3. Guardar cambios`;\n          } else if (errorData.error === 'invalid_scope') {\n            errorMessage = `‚ùå Scope inv√°lido\\n\\n` + `El scope '${KEYCLOAK_CONFIG.scope}' no est√° configurado correctamente.\\n\\n` + `Verifica en Keycloak:\\n` + `1. Client Scopes ‚Üí address est√° asignado al cliente\\n` + `2. Mappers est√°n configurados para address`;\n          } else {\n            errorMessage = errorData.error_description || errorData.error || `Error ${response.status}`;\n          }\n        } catch (parseError) {\n          errorMessage = `Error ${response.status}: ${response.statusText}`;\n        }\n        throw new Error(errorMessage);\n      }\n      var authData = yield response.json();\n      if (!authData.access_token) {\n        throw new Error('No se recibi√≥ token de acceso del servidor');\n      }\n      console.log('‚úÖ Tokens recibidos correctamente');\n      var userInfo = extractUserInfo(authData.id_token);\n      var newAuthState = {\n        isAuthenticated: true,\n        accessToken: authData.access_token,\n        refreshToken: authData.refresh_token || null,\n        userInfo: userInfo\n      };\n      setAuthState(newAuthState);\n      setTimeout(function () {\n        Alert.alert('‚úÖ Inicio de Sesi√≥n Exitoso', `Bienvenido ${(userInfo == null ? void 0 : userInfo.name) || (userInfo == null ? void 0 : userInfo.preferred_username) || username}`);\n      }, 100);\n    } catch (err) {\n      console.error('‚ùå Error en proceso de login:', err);\n      var _errorMessage = err.message || 'Error desconocido de autenticaci√≥n';\n      if (_errorMessage.includes('Failed to fetch') || _errorMessage.includes('Network request failed') || _errorMessage.includes('aborted')) {\n        _errorMessage = `‚ùå Error de conexi√≥n\\n\\n` + `No se pudo conectar a Keycloak.\\n\\n` + `Verifica:\\n` + `‚Ä¢ Keycloak est√° corriendo en ${KEYCLOAK_CONFIG.baseUrl}\\n` + `‚Ä¢ Puedes acceder a la URL desde tu navegador`;\n      }\n      setError(_errorMessage);\n      Alert.alert('‚ùå Error de Autenticaci√≥n', _errorMessage);\n      setAuthState({\n        isAuthenticated: false,\n        accessToken: null,\n        refreshToken: null,\n        userInfo: null\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["login","_ref","_asyncToGenerator","username","password","Alert","alert","userStr","trim","passStr","isLoading","setIsLoading","setError","console","log","clientId","KEYCLOAK_CONFIG","realm","baseUrl","scope","tokenUrl","isServerReachable","checkServerConnectivity","Error","bodyParams","URLSearchParams","grant_type","client_id","client_secret","clientSecret","response","fetchWithTimeout","method","headers","body","toString","status","ok","errorText","text","error","errorMessage","errorData","JSON","parse","_errorData$error_desc","error_description","includes","parseError","statusText","authData","json","access_token","userInfo","extractUserInfo","id_token","newAuthState","isAuthenticated","accessToken","refreshToken","refresh_token","setAuthState","setTimeout","name","preferred_username","err","message","_x","_x2","apply","arguments"],"sources":["C:/proyectos_react_native/KeycloakSSOApp/src/contexts/AuthContext.tsx"],"sourcesContent":["const login = async (username: string, password: string): Promise<void> => {\r\n  if (!username || !password) {\r\n    Alert.alert('‚ùå Error', 'Usuario y contrase√±a son requeridos');\r\n    return;\r\n  }\r\n\r\n  const userStr = username.trim();\r\n  const passStr = password.trim();\r\n\r\n  if (isLoading) return;\r\n\r\n  setIsLoading(true);\r\n  setError(null);\r\n  \r\n  try {\r\n    console.log('üîê Iniciando autenticaci√≥n con Keycloak...');\r\n    console.log('üìã Configuraci√≥n:', {\r\n      username: userStr,\r\n      clientId: KEYCLOAK_CONFIG.clientId,\r\n      realm: KEYCLOAK_CONFIG.realm,\r\n      baseUrl: KEYCLOAK_CONFIG.baseUrl,\r\n      scope: KEYCLOAK_CONFIG.scope\r\n    });\r\n\r\n    const tokenUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/token`;\r\n    console.log('üåê Token endpoint:', tokenUrl);\r\n\r\n    // Verificar conectividad primero\r\n    console.log('üîÑ Verificando conectividad...');\r\n    const isServerReachable = await checkServerConnectivity();\r\n    if (!isServerReachable) {\r\n      throw new Error(\r\n        `No se puede conectar a Keycloak.\\n\\n` +\r\n        `Verifica que:\\n` +\r\n        `‚Ä¢ Keycloak est√© corriendo en: ${KEYCLOAK_CONFIG.baseUrl}\\n` +\r\n        `‚Ä¢ El realm '${KEYCLOAK_CONFIG.realm}' exista\\n` +\r\n        `‚Ä¢ No haya firewall bloqueando el puerto 8080`\r\n      );\r\n    }\r\n\r\n    const bodyParams = new URLSearchParams({\r\n      grant_type: 'password',\r\n      client_id: KEYCLOAK_CONFIG.clientId,\r\n      client_secret: KEYCLOAK_CONFIG.clientSecret,\r\n      username: userStr,\r\n      password: passStr,\r\n      scope: KEYCLOAK_CONFIG.scope\r\n    });\r\n\r\n    console.log('üì§ Enviando credenciales al servidor...');\r\n    console.log('üéØ Scope solicitado:', KEYCLOAK_CONFIG.scope);\r\n\r\n    const response = await fetchWithTimeout(tokenUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: bodyParams.toString()\r\n    }, 15000);\r\n\r\n    console.log('üì° Status de respuesta:', response.status);\r\n\r\n    // Manejar errores de respuesta\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('‚ùå Error HTTP:', response.status, errorText);\r\n      \r\n      let errorMessage = 'Error de autenticaci√≥n';\r\n      \r\n      try {\r\n        const errorData = JSON.parse(errorText);\r\n        console.log('üîç Detalles del error:', errorData);\r\n        \r\n        // ‚úÖ MANEJO MEJORADO DE ERRORES - AGREGAR ESTA PARTE\r\n        if (errorData.error === 'invalid_client') {\r\n          errorMessage = \r\n            `‚ùå Error de configuraci√≥n del cliente\\n\\n` +\r\n            `Posibles causas:\\n` +\r\n            `‚Ä¢ El client_secret es incorrecto\\n` +\r\n            `‚Ä¢ El cliente '${KEYCLOAK_CONFIG.clientId}' no existe\\n` +\r\n            `‚Ä¢ El cliente no est√° habilitado\\n\\n` +\r\n            `Soluci√≥n:\\n` +\r\n            `1. Ve a Keycloak Admin Console\\n` +\r\n            `2. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` +\r\n            `3. Verifica la configuraci√≥n`;\r\n        } else if (errorData.error === 'invalid_grant') {\r\n          // ‚úÖ DIFERENCIAR ENTRE CREDENCIALES INCORRECTAS Y CUENTA NO CONFIGURADA\r\n          if (errorData.error_description?.includes('Account is not fully set up')) {\r\n            errorMessage = \r\n              `‚ùå Cuenta no completamente configurada\\n\\n` +\r\n              `Tu cuenta requiere una configuraci√≥n adicional.\\n\\n` +\r\n              `Posibles soluciones:\\n` +\r\n              `‚Ä¢ Verifica tu email y confirma tu cuenta\\n` +\r\n              `‚Ä¢ Contacta al administrador\\n` +\r\n              `‚Ä¢ La cuenta puede requerir verificaci√≥n de email`;\r\n          } else {\r\n            errorMessage = '‚ùå Usuario o contrase√±a incorrectos';\r\n          }\r\n        } else if (errorData.error === 'unauthorized_client') {\r\n          errorMessage = \r\n            `‚ùå Cliente no autorizado\\n\\n` +\r\n            `El cliente no tiene habilitado 'Direct Access Grants'.\\n\\n` +\r\n            `Soluci√≥n en Keycloak:\\n` +\r\n            `1. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` +\r\n            `2. Settings ‚Üí Direct Access Grants Enabled = ON\\n` +\r\n            `3. Guardar cambios`;\r\n        } else if (errorData.error === 'invalid_scope') {\r\n          errorMessage = \r\n            `‚ùå Scope inv√°lido\\n\\n` +\r\n            `El scope '${KEYCLOAK_CONFIG.scope}' no est√° configurado correctamente.\\n\\n` +\r\n            `Verifica en Keycloak:\\n` +\r\n            `1. Client Scopes ‚Üí address est√° asignado al cliente\\n` +\r\n            `2. Mappers est√°n configurados para address`;\r\n        } else {\r\n          errorMessage = errorData.error_description || errorData.error || `Error ${response.status}`;\r\n        }\r\n      } catch (parseError) {\r\n        errorMessage = `Error ${response.status}: ${response.statusText}`;\r\n      }\r\n      \r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    // ... resto del c√≥digo para √©xito\r\n    const authData: AuthResponse = await response.json();\r\n    \r\n    if (!authData.access_token) {\r\n      throw new Error('No se recibi√≥ token de acceso del servidor');\r\n    }\r\n\r\n    console.log('‚úÖ Tokens recibidos correctamente');\r\n    \r\n    // Extraer informaci√≥n del usuario del ID token\r\n    const userInfo = extractUserInfo(authData.id_token);\r\n\r\n    // ‚úÖ ACTUALIZAR ESTADO\r\n    const newAuthState = {\r\n      isAuthenticated: true,\r\n      accessToken: authData.access_token,\r\n      refreshToken: authData.refresh_token || null,\r\n      userInfo\r\n    };\r\n\r\n    setAuthState(newAuthState);\r\n\r\n    setTimeout(() => {\r\n      Alert.alert(\r\n        '‚úÖ Inicio de Sesi√≥n Exitoso', \r\n        `Bienvenido ${userInfo?.name || userInfo?.preferred_username || username}`\r\n      );\r\n    }, 100);\r\n    \r\n  } catch (err: any) {\r\n    console.error('‚ùå Error en proceso de login:', err);\r\n    \r\n    let errorMessage = err.message || 'Error desconocido de autenticaci√≥n';\r\n    \r\n    // Detectar errores de red\r\n    if (errorMessage.includes('Failed to fetch') || \r\n        errorMessage.includes('Network request failed') ||\r\n        errorMessage.includes('aborted')) {\r\n      errorMessage = \r\n        `‚ùå Error de conexi√≥n\\n\\n` +\r\n        `No se pudo conectar a Keycloak.\\n\\n` +\r\n        `Verifica:\\n` +\r\n        `‚Ä¢ Keycloak est√° corriendo en ${KEYCLOAK_CONFIG.baseUrl}\\n` +\r\n        `‚Ä¢ Puedes acceder a la URL desde tu navegador`;\r\n    }\r\n    \r\n    setError(errorMessage);\r\n    Alert.alert('‚ùå Error de Autenticaci√≥n', errorMessage);\r\n    \r\n    setAuthState({\r\n      isAuthenticated: false,\r\n      accessToken: null,\r\n      refreshToken: null,\r\n      userInfo: null\r\n    });\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}