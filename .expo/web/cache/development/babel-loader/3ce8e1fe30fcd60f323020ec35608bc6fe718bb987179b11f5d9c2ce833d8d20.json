{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nvar KEYCLOAK_CONFIG = {\n  baseUrl: 'http://localhost:8080',\n  realm: 'test-realm',\n  clientId: 'react-client',\n  clientSecret: '5TNS3QssvRo6Xu7IVH9gadDhnGGt80bo',\n  scope: 'openid profile email phone address'\n};\nvar fetchWithTimeout = function () {\n  var _ref = _asyncToGenerator(function* (url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;\n    var controller = new AbortController();\n    var signal = controller.signal;\n    var timeoutId = setTimeout(function () {\n      controller.abort();\n    }, timeout);\n    try {\n      var response = yield fetch(url, _objectSpread(_objectSpread({}, options), {}, {\n        signal: signal\n      }));\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      throw error;\n    }\n  });\n  return function fetchWithTimeout(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var AuthProvider = function AuthProvider(_ref2) {\n  var children = _ref2.children;\n  var _useState = useState({\n      isAuthenticated: false,\n      accessToken: null,\n      refreshToken: null,\n      userInfo: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    authState = _useState2[0],\n    setAuthState = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var checkServerConnectivity = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var testUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/.well-known/openid-configuration`;\n        console.log('üîç Verificando conectividad con:', testUrl);\n        var response = yield fetchWithTimeout(testUrl, {\n          method: 'GET'\n        }, 10000);\n        if (response.ok) {\n          var config = yield response.json();\n          console.log('‚úÖ Keycloak est√° accesible');\n          console.log('üìç Token endpoint:', config.token_endpoint);\n          return true;\n        }\n        console.log('‚ùå Keycloak respondi√≥ con error:', response.status);\n        return false;\n      } catch (error) {\n        console.error('‚ùå Keycloak no est√° accesible:', error);\n        return false;\n      }\n    });\n    return function checkServerConnectivity() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var extractUserInfo = function extractUserInfo(idToken) {\n    try {\n      if (!idToken) {\n        console.warn('‚ö†Ô∏è No se encontr√≥ idToken');\n        return null;\n      }\n      var payload = idToken.split('.')[1];\n      if (!payload) {\n        console.error('‚ùå Token JWT malformado');\n        return null;\n      }\n      var base64 = payload.replace(/-/g, '+').replace(/_/g, '/');\n      while (base64.length % 4) {\n        base64 += '=';\n      }\n      var decodedPayload = JSON.parse(atob(base64));\n      var userInfo = {\n        sub: decodedPayload.sub || '',\n        preferred_username: decodedPayload.preferred_username || 'usuario',\n        email: decodedPayload.email || '',\n        given_name: decodedPayload.given_name || '',\n        family_name: decodedPayload.family_name || '',\n        name: decodedPayload.name || 'Usuario',\n        email_verified: decodedPayload.email_verified || false,\n        phone: decodedPayload.phone || '',\n        address: decodedPayload.address || ''\n      };\n      console.log('üë§ UserInfo extra√≠do del token:', {\n        username: userInfo.preferred_username,\n        email: userInfo.email,\n        name: userInfo.name,\n        phone: userInfo.phone || 'No disponible',\n        address: userInfo.address || 'No disponible'\n      });\n      return userInfo;\n    } catch (err) {\n      console.error('‚ùå Error decodificando user info:', err);\n      return null;\n    }\n  };\n  var clearError = function clearError() {\n    setError(null);\n  };\n  var login = function () {\n    var _ref4 = _asyncToGenerator(function* (username, password) {\n      if (!username || !password) {\n        Alert.alert('‚ùå Error', 'Usuario y contrase√±a son requeridos');\n        return;\n      }\n      var userStr = username.trim();\n      var passStr = password.trim();\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n      try {\n        var _newAuthState$userInf, _newAuthState$userInf2, _newAuthState$userInf3;\n        console.log('üîê Iniciando autenticaci√≥n con Keycloak...');\n        console.log('üìã Configuraci√≥n:', {\n          username: userStr,\n          clientId: KEYCLOAK_CONFIG.clientId,\n          realm: KEYCLOAK_CONFIG.realm,\n          baseUrl: KEYCLOAK_CONFIG.baseUrl,\n          scope: KEYCLOAK_CONFIG.scope\n        });\n        var tokenUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/token`;\n        console.log('üåê Token endpoint:', tokenUrl);\n        console.log('üîÑ Verificando conectividad...');\n        var isServerReachable = yield checkServerConnectivity();\n        if (!isServerReachable) {\n          throw new Error(`No se puede conectar a Keycloak.\\n\\n` + `Verifica que:\\n` + `‚Ä¢ Keycloak est√© corriendo en: ${KEYCLOAK_CONFIG.baseUrl}\\n` + `‚Ä¢ El realm '${KEYCLOAK_CONFIG.realm}' exista\\n` + `‚Ä¢ No haya firewall bloqueando el puerto 8080`);\n        }\n        var bodyParams = new URLSearchParams({\n          grant_type: 'password',\n          client_id: KEYCLOAK_CONFIG.clientId,\n          client_secret: KEYCLOAK_CONFIG.clientSecret,\n          username: userStr,\n          password: passStr,\n          scope: KEYCLOAK_CONFIG.scope\n        });\n        console.log('üì§ Enviando credenciales al servidor...');\n        console.log('üéØ Scope solicitado:', KEYCLOAK_CONFIG.scope);\n        var response = yield fetchWithTimeout(tokenUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: bodyParams.toString()\n        }, 15000);\n        console.log('üì° Status de respuesta:', response.status);\n        if (!response.ok) {\n          var errorText = yield response.text();\n          console.error('‚ùå Error HTTP:', response.status, errorText);\n          var errorMessage = 'Error de autenticaci√≥n';\n          try {\n            var errorData = JSON.parse(errorText);\n            console.log('üîç Detalles del error:', errorData);\n            if (errorData.error === 'invalid_client') {\n              errorMessage = `‚ùå Error de configuraci√≥n del cliente\\n\\n` + `Posibles causas:\\n` + `‚Ä¢ El client_secret es incorrecto\\n` + `‚Ä¢ El cliente '${KEYCLOAK_CONFIG.clientId}' no existe\\n` + `‚Ä¢ El cliente no est√° habilitado\\n\\n` + `Soluci√≥n:\\n` + `1. Ve a Keycloak Admin Console\\n` + `2. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` + `3. Verifica la configuraci√≥n`;\n            } else if (errorData.error === 'invalid_grant') {\n              errorMessage = '‚ùå Usuario o contrase√±a incorrectos';\n            } else if (errorData.error === 'unauthorized_client') {\n              errorMessage = `‚ùå Cliente no autorizado\\n\\n` + `El cliente no tiene habilitado 'Direct Access Grants'.\\n\\n` + `Soluci√≥n en Keycloak:\\n` + `1. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` + `2. Settings ‚Üí Direct Access Grants Enabled = ON\\n` + `3. Guardar cambios`;\n            } else if (errorData.error === 'invalid_scope') {\n              errorMessage = `‚ùå Scope inv√°lido\\n\\n` + `El scope '${KEYCLOAK_CONFIG.scope}' no est√° configurado correctamente.\\n\\n` + `Verifica en Keycloak:\\n` + `1. Client Scopes ‚Üí address est√° asignado al cliente\\n` + `2. Mappers est√°n configurados para address`;\n            } else {\n              errorMessage = errorData.error_description || errorData.error || `Error ${response.status}`;\n            }\n          } catch (parseError) {\n            errorMessage = `Error ${response.status}: ${response.statusText}`;\n          }\n          throw new Error(errorMessage);\n        }\n        var authData = yield response.json();\n        if (!authData.access_token) {\n          throw new Error('No se recibi√≥ token de acceso del servidor');\n        }\n        console.log('‚úÖ Tokens recibidos correctamente');\n        console.log('üîë Token type:', authData.token_type);\n        console.log('‚è±Ô∏è Expires in:', authData.expires_in, 'segundos');\n        console.log('üìã Scope recibido:', authData.scope);\n        var userInfo = extractUserInfo(authData.id_token);\n        if (!userInfo) {\n          console.warn('‚ö†Ô∏è No se pudo extraer informaci√≥n del usuario');\n        }\n        var newAuthState = {\n          isAuthenticated: true,\n          accessToken: authData.access_token,\n          refreshToken: authData.refresh_token || null,\n          userInfo: userInfo\n        };\n        console.log('üéâ Login exitoso para:', (userInfo == null ? void 0 : userInfo.preferred_username) || username);\n        console.log('üîê Estado de autenticaci√≥n actualizado:', {\n          isAuthenticated: newAuthState.isAuthenticated,\n          hasToken: !!newAuthState.accessToken,\n          user: (_newAuthState$userInf = newAuthState.userInfo) == null ? void 0 : _newAuthState$userInf.preferred_username,\n          phone: ((_newAuthState$userInf2 = newAuthState.userInfo) == null ? void 0 : _newAuthState$userInf2.phone) || 'No disponible',\n          address: ((_newAuthState$userInf3 = newAuthState.userInfo) == null ? void 0 : _newAuthState$userInf3.address) || 'No disponible'\n        });\n        setAuthState(newAuthState);\n        setTimeout(function () {\n          Alert.alert('‚úÖ Inicio de Sesi√≥n Exitoso', `Bienvenido ${(userInfo == null ? void 0 : userInfo.name) || (userInfo == null ? void 0 : userInfo.preferred_username) || username}`);\n        }, 100);\n      } catch (err) {\n        console.error('‚ùå Error en proceso de login:', err);\n        var _errorMessage = err.message || 'Error desconocido de autenticaci√≥n';\n        if (_errorMessage.includes('Failed to fetch') || _errorMessage.includes('Network request failed') || _errorMessage.includes('aborted')) {\n          _errorMessage = `‚ùå Error de conexi√≥n\\n\\n` + `No se pudo conectar a Keycloak.\\n\\n` + `Verifica:\\n` + `‚Ä¢ Keycloak est√° corriendo en ${KEYCLOAK_CONFIG.baseUrl}\\n` + `‚Ä¢ Puedes acceder a la URL desde tu navegador`;\n        }\n        setError(_errorMessage);\n        Alert.alert('‚ùå Error de Autenticaci√≥n', _errorMessage);\n        setAuthState({\n          isAuthenticated: false,\n          accessToken: null,\n          refreshToken: null,\n          userInfo: null\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function login(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (isLoading) return;\n      try {\n        var _authState$userInfo;\n        setIsLoading(true);\n        console.log('üö™ Cerrando sesi√≥n...');\n        var username = ((_authState$userInfo = authState.userInfo) == null ? void 0 : _authState$userInfo.preferred_username) || 'Usuario';\n        if (authState.refreshToken) {\n          try {\n            var logoutUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/logout`;\n            var bodyParams = new URLSearchParams({\n              client_id: KEYCLOAK_CONFIG.clientId,\n              client_secret: KEYCLOAK_CONFIG.clientSecret,\n              refresh_token: authState.refreshToken\n            });\n            yield fetchWithTimeout(logoutUrl, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: bodyParams.toString()\n            }, 10000);\n            console.log('‚úÖ Sesi√≥n cerrada en Keycloak');\n          } catch (logoutError) {\n            console.warn('‚ö†Ô∏è Error al cerrar sesi√≥n en Keycloak:', logoutError);\n          }\n        }\n        setAuthState({\n          isAuthenticated: false,\n          accessToken: null,\n          refreshToken: null,\n          userInfo: null\n        });\n        setError(null);\n        console.log('‚úÖ Sesi√≥n cerrada localmente');\n        Alert.alert('üëã Sesi√≥n Cerrada', `Hasta pronto, ${username}`);\n      } catch (err) {\n        console.error('‚ùå Error en logout:', err);\n        setAuthState({\n          isAuthenticated: false,\n          accessToken: null,\n          refreshToken: null,\n          userInfo: null\n        });\n        Alert.alert('‚ö†Ô∏è Aviso', 'Sesi√≥n cerrada localmente');\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var _authState$userInfo2, _authState$userInfo3, _authState$userInfo4;\n    console.log('üîÑ Estado de autenticaci√≥n actualizado:', {\n      isAuthenticated: authState.isAuthenticated,\n      user: ((_authState$userInfo2 = authState.userInfo) == null ? void 0 : _authState$userInfo2.preferred_username) || 'No user',\n      hasToken: !!authState.accessToken,\n      phone: ((_authState$userInfo3 = authState.userInfo) == null ? void 0 : _authState$userInfo3.phone) || 'No disponible',\n      address: ((_authState$userInfo4 = authState.userInfo) == null ? void 0 : _authState$userInfo4.address) || 'No disponible'\n    });\n    if (authState.isAuthenticated && authState.userInfo) {\n      console.log('üîê USUARIO AUTENTICADO CORRECTAMENTE:', {\n        username: authState.userInfo.preferred_username,\n        email: authState.userInfo.email,\n        phone: authState.userInfo.phone || 'No disponible',\n        address: authState.userInfo.address || 'No disponible',\n        hasToken: !!authState.accessToken,\n        allFields: Object.keys(authState.userInfo)\n      });\n    }\n  }, [authState.isAuthenticated, authState.userInfo, authState.accessToken]);\n  useEffect(function () {\n    if (error) {\n      var timer = setTimeout(function () {\n        setError(null);\n      }, 8000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [error]);\n  var providerValue = {\n    authState: authState,\n    user: authState.userInfo,\n    login: login,\n    logout: logout,\n    isLoading: isLoading,\n    error: error,\n    clearError: clearError\n  };\n  return _jsx(AuthContext.Provider, {\n    value: providerValue,\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Alert","jsx","_jsx","AuthContext","undefined","KEYCLOAK_CONFIG","baseUrl","realm","clientId","clientSecret","scope","fetchWithTimeout","_ref","_asyncToGenerator","url","options","arguments","length","timeout","controller","AbortController","signal","timeoutId","setTimeout","abort","response","fetch","_objectSpread","clearTimeout","error","_x","apply","AuthProvider","_ref2","children","_useState","isAuthenticated","accessToken","refreshToken","userInfo","_useState2","_slicedToArray","authState","setAuthState","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","checkServerConnectivity","_ref3","testUrl","console","log","method","ok","config","json","token_endpoint","status","extractUserInfo","idToken","warn","payload","split","base64","replace","decodedPayload","JSON","parse","atob","sub","preferred_username","email","given_name","family_name","name","email_verified","phone","address","username","err","clearError","login","_ref4","password","alert","userStr","trim","passStr","_newAuthState$userInf","_newAuthState$userInf2","_newAuthState$userInf3","tokenUrl","isServerReachable","Error","bodyParams","URLSearchParams","grant_type","client_id","client_secret","headers","body","toString","errorText","text","errorMessage","errorData","error_description","parseError","statusText","authData","access_token","token_type","expires_in","id_token","newAuthState","refresh_token","hasToken","user","message","includes","_x2","_x3","logout","_ref5","_authState$userInfo","logoutUrl","logoutError","_authState$userInfo2","_authState$userInfo3","_authState$userInfo4","allFields","Object","keys","timer","providerValue","Provider","value","useAuth","context"],"sources":["C:/proyectos_react_native/KeycloakSSOApp/src/screens/ProfileScreen.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Alert } from 'react-native';\r\n\r\n// Interfaces ACTUALIZADAS - Incluye phone y address\r\ninterface UserInfo {\r\n  sub?: string;\r\n  preferred_username?: string;\r\n  email?: string;\r\n  given_name?: string;\r\n  email_verified?: boolean;\r\n  family_name?: string;\r\n  name?: string;\r\n  phone?: string;\r\n  address?: string; // ‚úÖ NUEVO CAMPO AGREGADO\r\n}\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  accessToken: string | null;\r\n  refreshToken: string | null;\r\n  userInfo: UserInfo | null;\r\n}\r\n\r\ninterface AuthResponse {\r\n  access_token: string;\r\n  id_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  refresh_token?: string;\r\n  scope?: string;\r\n}\r\n\r\ninterface AuthContextValue {\r\n  authState: AuthState;\r\n  user: UserInfo | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// ‚úÖ CONFIGURACI√ìN ACTUALIZADA - SCOPE INCLUYE ADDRESS\r\nconst KEYCLOAK_CONFIG = {\r\n  baseUrl: 'http://localhost:8080',\r\n  realm: 'test-realm', \r\n  clientId: 'react-client',\r\n  clientSecret: '5TNS3QssvRo6Xu7IVH9gadDhnGGt80bo',\r\n  scope: 'openid profile email phone address' // ‚úÖ SCOPE ACTUALIZADO CON ADDRESS\r\n};\r\n\r\n// Funci√≥n helper para fetch con timeout\r\nconst fetchWithTimeout = async (\r\n  url: string, \r\n  options: RequestInit = {}, \r\n  timeout = 10000\r\n): Promise<Response> => {\r\n  const controller = new AbortController();\r\n  const { signal } = controller;\r\n\r\n  const timeoutId = setTimeout(() => {\r\n    controller.abort();\r\n  }, timeout);\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      signal\r\n    });\r\n    clearTimeout(timeoutId);\r\n    return response;\r\n  } catch (error) {\r\n    clearTimeout(timeoutId);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }: { children: ReactNode }) => {\r\n  const [authState, setAuthState] = useState<AuthState>({\r\n    isAuthenticated: false,\r\n    accessToken: null,\r\n    refreshToken: null,\r\n    userInfo: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Funci√≥n para verificar conectividad con el servidor\r\n  const checkServerConnectivity = async (): Promise<boolean> => {\r\n    try {\r\n      const testUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/.well-known/openid-configuration`;\r\n      console.log('üîç Verificando conectividad con:', testUrl);\r\n      \r\n      const response = await fetchWithTimeout(testUrl, { \r\n        method: 'GET'\r\n      }, 10000);\r\n      \r\n      if (response.ok) {\r\n        const config = await response.json();\r\n        console.log('‚úÖ Keycloak est√° accesible');\r\n        console.log('üìç Token endpoint:', config.token_endpoint);\r\n        return true;\r\n      }\r\n      console.log('‚ùå Keycloak respondi√≥ con error:', response.status);\r\n      return false;\r\n    } catch (error) {\r\n      console.error('‚ùå Keycloak no est√° accesible:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Funci√≥n para extraer informaci√≥n del usuario del token - ACTUALIZADA CON ADDRESS\r\n  const extractUserInfo = (idToken: string): UserInfo | null => {\r\n    try {\r\n      if (!idToken) {\r\n        console.warn('‚ö†Ô∏è No se encontr√≥ idToken');\r\n        return null;\r\n      }\r\n\r\n      const payload = idToken.split('.')[1];\r\n      if (!payload) {\r\n        console.error('‚ùå Token JWT malformado');\r\n        return null;\r\n      }\r\n\r\n      let base64 = payload.replace(/-/g, '+').replace(/_/g, '/');\r\n      while (base64.length % 4) {\r\n        base64 += '=';\r\n      }\r\n\r\n      const decodedPayload = JSON.parse(atob(base64));\r\n\r\n      const userInfo: UserInfo = {\r\n        sub: decodedPayload.sub || '',\r\n        preferred_username: decodedPayload.preferred_username || 'usuario',\r\n        email: decodedPayload.email || '',\r\n        given_name: decodedPayload.given_name || '',\r\n        family_name: decodedPayload.family_name || '',\r\n        name: decodedPayload.name || 'Usuario',\r\n        email_verified: decodedPayload.email_verified || false,\r\n        phone: decodedPayload.phone || '',\r\n        address: decodedPayload.address || '' // ‚úÖ NUEVO CAMPO AGREGADO\r\n      };\r\n\r\n      console.log('üë§ UserInfo extra√≠do del token:', {\r\n        username: userInfo.preferred_username,\r\n        email: userInfo.email,\r\n        name: userInfo.name,\r\n        phone: userInfo.phone || 'No disponible',\r\n        address: userInfo.address || 'No disponible' // ‚úÖ LOG DE LA DIRECCI√ìN\r\n      });\r\n      return userInfo;\r\n\r\n    } catch (err) {\r\n      console.error('‚ùå Error decodificando user info:', err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const clearError = (): void => {\r\n    setError(null);\r\n  };\r\n\r\n  const login = async (username: string, password: string): Promise<void> => {\r\n    if (!username || !password) {\r\n      Alert.alert('‚ùå Error', 'Usuario y contrase√±a son requeridos');\r\n      return;\r\n    }\r\n\r\n    const userStr = username.trim();\r\n    const passStr = password.trim();\r\n\r\n    if (isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('üîê Iniciando autenticaci√≥n con Keycloak...');\r\n      console.log('üìã Configuraci√≥n:', {\r\n        username: userStr,\r\n        clientId: KEYCLOAK_CONFIG.clientId,\r\n        realm: KEYCLOAK_CONFIG.realm,\r\n        baseUrl: KEYCLOAK_CONFIG.baseUrl,\r\n        scope: KEYCLOAK_CONFIG.scope // ‚úÖ SCOPE INCLUIDO EN LOG\r\n      });\r\n\r\n      // ‚úÖ ENDPOINT para token\r\n      const tokenUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/token`;\r\n      console.log('üåê Token endpoint:', tokenUrl);\r\n\r\n      // Verificar conectividad primero\r\n      console.log('üîÑ Verificando conectividad...');\r\n      const isServerReachable = await checkServerConnectivity();\r\n      if (!isServerReachable) {\r\n        throw new Error(\r\n          `No se puede conectar a Keycloak.\\n\\n` +\r\n          `Verifica que:\\n` +\r\n          `‚Ä¢ Keycloak est√© corriendo en: ${KEYCLOAK_CONFIG.baseUrl}\\n` +\r\n          `‚Ä¢ El realm '${KEYCLOAK_CONFIG.realm}' exista\\n` +\r\n          `‚Ä¢ No haya firewall bloqueando el puerto 8080`\r\n        );\r\n      }\r\n\r\n      // ‚úÖ CONFIGURAR PAR√ÅMETROS CON CLIENT_SECRET - SCOPE ACTUALIZADO\r\n      const bodyParams = new URLSearchParams({\r\n        grant_type: 'password',\r\n        client_id: KEYCLOAK_CONFIG.clientId,\r\n        client_secret: KEYCLOAK_CONFIG.clientSecret,\r\n        username: userStr,\r\n        password: passStr,\r\n        scope: KEYCLOAK_CONFIG.scope // ‚úÖ USANDO SCOPE CONFIGURADO QUE INCLUYE ADDRESS\r\n      });\r\n\r\n      console.log('üì§ Enviando credenciales al servidor...');\r\n      console.log('üéØ Scope solicitado:', KEYCLOAK_CONFIG.scope);\r\n\r\n      const response = await fetchWithTimeout(tokenUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: bodyParams.toString()\r\n      }, 15000);\r\n\r\n      console.log('üì° Status de respuesta:', response.status);\r\n\r\n      // Manejar errores de respuesta\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('‚ùå Error HTTP:', response.status, errorText);\r\n        \r\n        let errorMessage = 'Error de autenticaci√≥n';\r\n        \r\n        try {\r\n          const errorData = JSON.parse(errorText);\r\n          console.log('üîç Detalles del error:', errorData);\r\n          \r\n          // Interpretar errores espec√≠ficos de Keycloak\r\n          if (errorData.error === 'invalid_client') {\r\n            errorMessage = \r\n              `‚ùå Error de configuraci√≥n del cliente\\n\\n` +\r\n              `Posibles causas:\\n` +\r\n              `‚Ä¢ El client_secret es incorrecto\\n` +\r\n              `‚Ä¢ El cliente '${KEYCLOAK_CONFIG.clientId}' no existe\\n` +\r\n              `‚Ä¢ El cliente no est√° habilitado\\n\\n` +\r\n              `Soluci√≥n:\\n` +\r\n              `1. Ve a Keycloak Admin Console\\n` +\r\n              `2. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` +\r\n              `3. Verifica la configuraci√≥n`;\r\n          } else if (errorData.error === 'invalid_grant') {\r\n            errorMessage = '‚ùå Usuario o contrase√±a incorrectos';\r\n          } else if (errorData.error === 'unauthorized_client') {\r\n            errorMessage = \r\n              `‚ùå Cliente no autorizado\\n\\n` +\r\n              `El cliente no tiene habilitado 'Direct Access Grants'.\\n\\n` +\r\n              `Soluci√≥n en Keycloak:\\n` +\r\n              `1. Clients ‚Üí ${KEYCLOAK_CONFIG.clientId}\\n` +\r\n              `2. Settings ‚Üí Direct Access Grants Enabled = ON\\n` +\r\n              `3. Guardar cambios`;\r\n          } else if (errorData.error === 'invalid_scope') {\r\n            errorMessage = \r\n              `‚ùå Scope inv√°lido\\n\\n` +\r\n              `El scope '${KEYCLOAK_CONFIG.scope}' no est√° configurado correctamente.\\n\\n` +\r\n              `Verifica en Keycloak:\\n` +\r\n              `1. Client Scopes ‚Üí address est√° asignado al cliente\\n` +\r\n              `2. Mappers est√°n configurados para address`;\r\n          } else {\r\n            errorMessage = errorData.error_description || errorData.error || `Error ${response.status}`;\r\n          }\r\n        } catch (parseError) {\r\n          errorMessage = `Error ${response.status}: ${response.statusText}`;\r\n        }\r\n        \r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      // Parsear respuesta exitosa\r\n      const authData: AuthResponse = await response.json();\r\n      \r\n      if (!authData.access_token) {\r\n        throw new Error('No se recibi√≥ token de acceso del servidor');\r\n      }\r\n\r\n      console.log('‚úÖ Tokens recibidos correctamente');\r\n      console.log('üîë Token type:', authData.token_type);\r\n      console.log('‚è±Ô∏è Expires in:', authData.expires_in, 'segundos');\r\n      console.log('üìã Scope recibido:', authData.scope);\r\n\r\n      // Extraer informaci√≥n del usuario del ID token\r\n      const userInfo = extractUserInfo(authData.id_token);\r\n\r\n      if (!userInfo) {\r\n        console.warn('‚ö†Ô∏è No se pudo extraer informaci√≥n del usuario');\r\n      }\r\n\r\n      // ‚úÖ ACTUALIZACI√ìN CR√çTICA: Actualizar estado de autenticaci√≥n\r\n      const newAuthState = {\r\n        isAuthenticated: true,\r\n        accessToken: authData.access_token,\r\n        refreshToken: authData.refresh_token || null,\r\n        userInfo\r\n      };\r\n\r\n      console.log('üéâ Login exitoso para:', userInfo?.preferred_username || username);\r\n      console.log('üîê Estado de autenticaci√≥n actualizado:', {\r\n        isAuthenticated: newAuthState.isAuthenticated,\r\n        hasToken: !!newAuthState.accessToken,\r\n        user: newAuthState.userInfo?.preferred_username,\r\n        phone: newAuthState.userInfo?.phone || 'No disponible',\r\n        address: newAuthState.userInfo?.address || 'No disponible' // ‚úÖ LOG DE LA DIRECCI√ìN\r\n      });\r\n\r\n      // ‚úÖ ACTUALIZAR EL ESTADO DE FORMA S√çNCRONA\r\n      setAuthState(newAuthState);\r\n\r\n      // ‚úÖ MOSTRAR ALERTA DESPU√âS de actualizar el estado\r\n      setTimeout(() => {\r\n        Alert.alert(\r\n          '‚úÖ Inicio de Sesi√≥n Exitoso', \r\n          `Bienvenido ${userInfo?.name || userInfo?.preferred_username || username}`\r\n        );\r\n      }, 100);\r\n      \r\n    } catch (err: any) {\r\n      console.error('‚ùå Error en proceso de login:', err);\r\n      \r\n      let errorMessage = err.message || 'Error desconocido de autenticaci√≥n';\r\n      \r\n      // Detectar errores de red\r\n      if (errorMessage.includes('Failed to fetch') || \r\n          errorMessage.includes('Network request failed') ||\r\n          errorMessage.includes('aborted')) {\r\n        errorMessage = \r\n          `‚ùå Error de conexi√≥n\\n\\n` +\r\n          `No se pudo conectar a Keycloak.\\n\\n` +\r\n          `Verifica:\\n` +\r\n          `‚Ä¢ Keycloak est√° corriendo en ${KEYCLOAK_CONFIG.baseUrl}\\n` +\r\n          `‚Ä¢ Puedes acceder a la URL desde tu navegador`;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      Alert.alert('‚ùå Error de Autenticaci√≥n', errorMessage);\r\n      \r\n      // ‚úÖ Asegurarse de que el estado de autenticaci√≥n sea false en caso de error\r\n      setAuthState({\r\n        isAuthenticated: false,\r\n        accessToken: null,\r\n        refreshToken: null,\r\n        userInfo: null\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async (): Promise<void> => {\r\n    if (isLoading) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('üö™ Cerrando sesi√≥n...');\r\n\r\n      const username = authState.userInfo?.preferred_username || 'Usuario';\r\n      \r\n      // Opcional: Llamar al endpoint de logout de Keycloak\r\n      if (authState.refreshToken) {\r\n        try {\r\n          const logoutUrl = `${KEYCLOAK_CONFIG.baseUrl}/realms/${KEYCLOAK_CONFIG.realm}/protocol/openid-connect/logout`;\r\n          \r\n          const bodyParams = new URLSearchParams({\r\n            client_id: KEYCLOAK_CONFIG.clientId,\r\n            client_secret: KEYCLOAK_CONFIG.clientSecret,\r\n            refresh_token: authState.refreshToken\r\n          });\r\n\r\n          await fetchWithTimeout(logoutUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: bodyParams.toString()\r\n          }, 10000);\r\n          \r\n          console.log('‚úÖ Sesi√≥n cerrada en Keycloak');\r\n        } catch (logoutError) {\r\n          console.warn('‚ö†Ô∏è Error al cerrar sesi√≥n en Keycloak:', logoutError);\r\n          // Continuar con el cierre local de todos modos\r\n        }\r\n      }\r\n      \r\n      // ‚úÖ Limpiar estado local - Asegurar que isAuthenticated sea false\r\n      setAuthState({\r\n        isAuthenticated: false,\r\n        accessToken: null,\r\n        refreshToken: null,\r\n        userInfo: null\r\n      });\r\n      setError(null);\r\n      \r\n      console.log('‚úÖ Sesi√≥n cerrada localmente');\r\n      Alert.alert('üëã Sesi√≥n Cerrada', `Hasta pronto, ${username}`);\r\n      \r\n    } catch (err: any) {\r\n      console.error('‚ùå Error en logout:', err);\r\n      \r\n      // ‚úÖ Limpiar de todos modos - Asegurar que isAuthenticated sea false\r\n      setAuthState({\r\n        isAuthenticated: false,\r\n        accessToken: null,\r\n        refreshToken: null,\r\n        userInfo: null\r\n      });\r\n      \r\n      Alert.alert('‚ö†Ô∏è Aviso', 'Sesi√≥n cerrada localmente');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ‚úÖ Efecto mejorado para debug de autenticaci√≥n\r\n  useEffect(() => {\r\n    console.log('üîÑ Estado de autenticaci√≥n actualizado:', {\r\n      isAuthenticated: authState.isAuthenticated,\r\n      user: authState.userInfo?.preferred_username || 'No user',\r\n      hasToken: !!authState.accessToken,\r\n      phone: authState.userInfo?.phone || 'No disponible',\r\n      address: authState.userInfo?.address || 'No disponible' // ‚úÖ LOG DE LA DIRECCI√ìN\r\n    });\r\n\r\n    if (authState.isAuthenticated && authState.userInfo) {\r\n      console.log('üîê USUARIO AUTENTICADO CORRECTAMENTE:', {\r\n        username: authState.userInfo.preferred_username,\r\n        email: authState.userInfo.email,\r\n        phone: authState.userInfo.phone || 'No disponible',\r\n        address: authState.userInfo.address || 'No disponible', // ‚úÖ LOG DE LA DIRECCI√ìN\r\n        hasToken: !!authState.accessToken,\r\n        allFields: Object.keys(authState.userInfo) // ‚úÖ MOSTRAR TODOS LOS CAMPOS DISPONIBLES\r\n      });\r\n    }\r\n  }, [authState.isAuthenticated, authState.userInfo, authState.accessToken]);\r\n\r\n  // Auto-limpiar errores despu√©s de 8 segundos\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 8000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  const providerValue: AuthContextValue = {\r\n    authState,\r\n    user: authState.userInfo,\r\n    login,\r\n    logout,\r\n    isLoading,\r\n    error,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={providerValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextValue => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}